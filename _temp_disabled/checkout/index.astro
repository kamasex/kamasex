---
// src/pages/checkout/index.astro
import BaseLayout from '../../layouts/BaseLayout.astro';

// Verificar si hay items en el carrito (esto se manejará en el cliente)
// Por ahora renderizamos la página completa
---

<BaseLayout 
  title="Checkout - Finalizar Compra"
  description="Completa tu pedido de forma segura y recibe tus productos con envío discreto"
  noindex={true}
>
  <!-- Progress Bar -->
  <div class="bg-white border-b">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-8">
          <div class="flex items-center text-primary-600">
            <div class="flex items-center justify-center w-8 h-8 bg-primary-500 text-white rounded-full text-sm font-medium">1</div>
            <span class="ml-2 text-sm font-medium">Información</span>
          </div>
          <div class="flex items-center text-gray-400">
            <div class="flex items-center justify-center w-8 h-8 border-2 border-gray-300 rounded-full text-sm">2</div>
            <span class="ml-2 text-sm">Pago</span>
          </div>
          <div class="flex items-center text-gray-400">
            <div class="flex items-center justify-center w-8 h-8 border-2 border-gray-300 rounded-full text-sm">3</div>
            <span class="ml-2 text-sm">Confirmación</span>
          </div>
        </div>
        
        <!-- Security Badge -->
        <div class="flex items-center text-sm text-gray-600">
          <svg class="w-5 h-5 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
          </svg>
          Compra 100% segura
        </div>
      </div>
    </div>
  </div>

  <!-- Main Checkout Content -->
  <div class="bg-gray-50 min-h-screen py-8">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Empty Cart State -->
      <div id="empty-cart" class="hidden text-center py-16">
        <div class="text-gray-400 mb-4">
          <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5-6M20 13v6a2 2 0 01-2 2H6a2 2 0 01-2-2v-6m16 0V9a2 2 0 00-2-2H6a2 2 0 00-2-2"></path>
          </svg>
        </div>
        <h2 class="text-2xl font-bold text-gray-900 mb-4">Tu carrito está vacío</h2>
        <p class="text-gray-600 mb-8">Agrega algunos productos antes de proceder al checkout</p>
        <a href="/productos" class="btn-primary">
          Explorar productos
        </a>
      </div>

      <!-- Checkout Form -->
      <div id="checkout-form" class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        
        <!-- Left Column - Forms -->
        <div class="lg:col-span-2 space-y-8">
          
          <!-- User Authentication -->
          <div id="auth-section" class="bg-white rounded-lg shadow-sm p-6">
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-xl font-semibold text-gray-900">Información de contacto</h2>
              <div id="auth-status" class="text-sm">
                <!-- Se llena dinámicamente -->
              </div>
            </div>
            
            <!-- Not logged in -->
            <div id="guest-checkout" class="space-y-4">
              <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
                <div class="flex items-start">
                  <svg class="w-5 h-5 text-blue-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                  </svg>
                  <div>
                    <h3 class="text-sm font-medium text-blue-800">¿Ya tienes cuenta?</h3>
                    <p class="text-sm text-blue-700 mt-1">Inicia sesión para un checkout más rápido</p>
                    <button id="login-btn" class="text-sm text-blue-600 hover:text-blue-500 font-medium mt-2 underline">
                      Iniciar sesión
                    </button>
                  </div>
                </div>
              </div>
              
              <div>
                <label for="guest-email" class="block text-sm font-medium text-gray-700 mb-2">
                  Email *
                </label>
                <input
                  type="email"
                  id="guest-email"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  placeholder="tu@email.com"
                />
              </div>
              
              <div class="flex items-center">
                <input type="checkbox" id="create-account" class="h-4 w-4 text-primary-600 rounded">
                <label for="create-account" class="ml-2 text-sm text-gray-600">
                  Crear cuenta para futuras compras
                </label>
              </div>
            </div>
            
            <!-- Logged in -->
            <div id="user-info" class="hidden">
              <div class="flex items-center p-4 bg-green-50 rounded-md">
                <svg class="w-5 h-5 text-green-400 mr-3" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                <div>
                  <p class="text-sm font-medium text-green-800" id="user-name"><!-- nombre --></p>
                  <p class="text-sm text-green-700" id="user-email"><!-- email --></p>
                </div>
              </div>
            </div>
          </div>

          <!-- Shipping Address -->
          <div class="bg-white rounded-lg shadow-sm p-6">
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-xl font-semibold text-gray-900">Dirección de envío</h2>
              <button id="address-book-btn" class="hidden text-sm text-primary-600 hover:text-primary-500">
                Usar dirección guardada
              </button>
            </div>
            
            <form id="shipping-form" class="space-y-4">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
                    Nombre *
                  </label>
                  <input
                    type="text"
                    id="firstName"
                    name="firstName"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  />
                </div>
                <div>
                  <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">
                    Apellido *
                  </label>
                  <input
                    type="text"
                    id="lastName"
                    name="lastName"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  />
                </div>
              </div>
              
              <div>
                <label for="streetAddress" class="block text-sm font-medium text-gray-700 mb-2">
                  Dirección *
                </label>
                <input
                  type="text"
                  id="streetAddress"
                  name="streetAddress"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  placeholder="Calle, número, barrio"
                />
              </div>
              
              <div>
                <label for="apartment" class="block text-sm font-medium text-gray-700 mb-2">
                  Apartamento, casa, etc. (opcional)
                </label>
                <input
                  type="text"
                  id="apartment"
                  name="apartment"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label for="city" class="block text-sm font-medium text-gray-700 mb-2">
                    Ciudad *
                  </label>
                  <input
                    type="text"
                    id="city"
                    name="city"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  />
                </div>
                <div>
                  <label for="state" class="block text-sm font-medium text-gray-700 mb-2">
                    Departamento *
                  </label>
                  <select
                    id="state"
                    name="state"
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  >
                    <option value="">Seleccionar</option>
                    <option value="Antioquia">Antioquia</option>
                    <option value="Atlántico">Atlántico</option>
                    <option value="Bogotá D.C.">Bogotá D.C.</option>
                    <option value="Bolívar">Bolívar</option>
                    <option value="Boyacá">Boyacá</option>
                    <option value="Caldas">Caldas</option>
                    <option value="Cundinamarca">Cundinamarca</option>
                    <option value="Valle del Cauca">Valle del Cauca</option>
                    <!-- Agregar más departamentos -->
                  </select>
                </div>
                <div>
                  <label for="postalCode" class="block text-sm font-medium text-gray-700 mb-2">
                    Código postal
                  </label>
                  <input
                    type="text"
                    id="postalCode"
                    name="postalCode"
                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  />
                </div>
              </div>
              
              <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
                  Teléfono *
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
                  placeholder="+57 300 123 4567"
                />
              </div>
              
              <div class="flex items-center">
                <input type="checkbox" id="save-address" class="h-4 w-4 text-primary-600 rounded">
                <label for="save-address" class="ml-2 text-sm text-gray-600">
                  Guardar esta dirección para futuras compras
                </label>
              </div>
            </form>
          </div>

          <!-- Shipping Method -->
          <div class="bg-white rounded-lg shadow-sm p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-6">Método de envío</h2>
            <div class="space-y-4" id="shipping-methods">
              <!-- Se llena dinámicamente -->
            </div>
          </div>

          <!-- Payment Method -->
          <div class="bg-white rounded-lg shadow-sm p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-6">Método de pago</h2>
            
            <div class="space-y-4">
              <!-- Payment options -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <label class="cursor-pointer">
                  <input type="radio" name="payment-method" value="card" class="sr-only" checked>
                  <div class="border-2 border-primary-500 rounded-lg p-4 bg-primary-50">
                    <div class="flex items-center">
                      <svg class="w-6 h-6 text-primary-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                      </svg>
                      <span class="font-medium text-primary-900">Tarjeta de crédito/débito</span>
                    </div>
                    <p class="text-sm text-primary-700 mt-2">Visa, Mastercard, American Express</p>
                  </div>
                </label>
                
                <label class="cursor-pointer">
                  <input type="radio" name="payment-method" value="pse" class="sr-only">
                  <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-gray-300">
                    <div class="flex items-center">
                      <svg class="w-6 h-6 text-gray-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z" />
                      </svg>
                      <span class="font-medium text-gray-900">PSE</span>
                    </div>
                    <p class="text-sm text-gray-600 mt-2">Pago mediante banco</p>
                  </div>
                </label>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <label class="cursor-pointer">
                  <input type="radio" name="payment-method" value="nequi" class="sr-only">
                  <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-gray-300">
                    <div class="flex items-center">
                      <svg class="w-6 h-6 text-gray-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                      </svg>
                      <span class="font-medium text-gray-900">Nequi</span>
                    </div>
                    <p class="text-sm text-gray-600 mt-2">Pago con Nequi</p>
                  </div>
                </label>
                
                <label class="cursor-pointer">
                  <input type="radio" name="payment-method" value="bancolombia" class="sr-only">
                  <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-gray-300">
                    <div class="flex items-center">
                      <svg class="w-6 h-6 text-gray-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                      </svg>
                      <span class="font-medium text-gray-900">Bancolombia</span>
                    </div>
                    <p class="text-sm text-gray-600 mt-2">Transferencia Bancolombia</p>
                  </div>
                </label>
              </div>
            </div>
          </div>

          <!-- Order Notes -->
          <div class="bg-white rounded-lg shadow-sm p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">Notas del pedido (opcional)</h2>
            <textarea
              id="order-notes"
              rows="3"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="Instrucciones especiales para la entrega..."
            ></textarea>
          </div>
        </div>

        <!-- Right Column - Order Summary -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-lg shadow-sm p-6 sticky top-24">
            <h2 class="text-xl font-semibold text-gray-900 mb-6">Resumen del pedido</h2>
            
            <!-- Cart Items -->
            <div id="checkout-cart-items" class="space-y-4 mb-6">
              <!-- Se llena dinámicamente -->
            </div>
            
            <!-- Promo Code -->
            <div class="border-t pt-6 mb-6">
              <div class="flex space-x-2">
                <input
                  type="text"
                  id="promo-code"
                  placeholder="Código de descuento"
                  class="flex-1 px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-primary-500"
                />
                <button 
                  id="apply-promo"
                  class="bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 transition-colors text-sm font-medium"
                >
                  Aplicar
                </button>
              </div>
              <div id="promo-message" class="mt-2 text-sm hidden"></div>
            </div>

            <!-- Order Totals -->
            <div class="border-t pt-6 space-y-3">
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Subtotal</span>
                <span id="subtotal">$0</span>
              </div>
              <div class="flex justify-between text-sm" id="discount-row" style="display: none;">
                <span class="text-gray-600">Descuento</span>
                <span class="text-green-600" id="discount">-$0</span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">Envío</span>
                <span id="shipping">$0</span>
              </div>
              <div class="flex justify-between text-sm">
                <span class="text-gray-600">IVA (19%)</span>
                <span id="tax">$0</span>
              </div>
              <div class="border-t pt-3 flex justify-between">
                <span class="text-lg font-semibold text-gray-900">Total</span>
                <span class="text-lg font-bold text-gray-900" id="total">$0</span>
              </div>
            </div>
            
            <!-- Free Shipping Progress -->
            <div id="free-shipping-progress" class="mt-6 p-4 bg-gray-50 rounded-md hidden">
              <div class="flex items-center justify-between text-xs text-gray-600 mb-2">
                <span>Envío gratis desde $150.000</span>
                <span id="free-shipping-remaining">$0 restantes</span>
              </div>
              <div class="w-full bg-gray-200 rounded-full h-2">
                <div id="free-shipping-bar" class="bg-primary-500 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
              </div>
            </div>

            <!-- Place Order Button -->
            <button
              id="place-order-btn"
              class="w-full mt-8 bg-primary-500 text-white py-4 rounded-md hover:bg-primary-600 transition-colors font-semibold text-lg disabled:opacity-50 disabled:cursor-not-allowed"
              disabled
            >
              Finalizar pedido
            </button>
            
            <!-- Security Info -->
            <div class="mt-6 text-center">
              <div class="flex items-center justify-center text-xs text-gray-500 mb-2">
                <svg class="w-4 h-4 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
                </svg>
                Pago 100% seguro y encriptado
              </div>
              <div class="flex items-center justify-center text-xs text-gray-500">
                <svg class="w-4 h-4 mr-1 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Envío discreto garantizado
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Importar stores y utilidades
  import { cartStore, cartSummary, isCartEmpty, exportCartForCheckout } from '../../stores/cartStore.js';
  import { userStore, isUserReady, requireAuth } from '../../stores/userStore.js';
  import { processHybridCheckout } from '../../lib/integration/sync.js';
  import { createPaymentLink, getPSEBanks } from '../../lib/wompi/payments.js';
  
  document.addEventListener('DOMContentLoaded', function() {
    initializeCheckout();
  });

  async function initializeCheckout() {
    // Verificar si hay items en el carrito
    const isEmpty = isCartEmpty.get();
    if (isEmpty) {
      document.getElementById('empty-cart').classList.remove('hidden');
      document.getElementById('checkout-form').classList.add('hidden');
      return;
    }

    // Inicializar componentes
    initializeUserSection();
    initializeCartSummary();
    initializeShippingMethods();
    initializePaymentMethods();
    initializeFormValidation();
    
    // Suscribirse a cambios del store
    cartSummary.subscribe(updateOrderSummary);
    userStore.subscribe(updateUserSection);
  }

  function initializeUserSection() {
    const user = userStore.get();
    const authStatus = document.getElementById('auth-status');
    const guestCheckout = document.getElementById('guest-checkout');
    const userInfo = document.getElementById('user-info');
    const loginBtn = document.getElementById('login-btn');

    if (user.isAuthenticated && user.profile) {
      // Usuario logueado
      guestCheckout.classList.add('hidden');
      userInfo.classList.remove('hidden');
      document.getElementById('user-name').textContent = `${user.profile.firstName} ${user.profile.lastName}`;
      document.getElementById('user-email').textContent = user.profile.email;
      authStatus.innerHTML = '<span class="text-green-600 font-medium">✓ Conectado</span>';
      
      // Pre-llenar dirección si existe
      if (user.addresses.length > 0) {
        const defaultAddr = user.addresses.find(addr => addr.isDefault && addr.type === 'shipping') || user.addresses[0];
        if (defaultAddr) {
          fillAddressForm(defaultAddr);
        }
      }
    } else {
      // Usuario invitado
      guestCheckout.classList.remove('hidden');
      userInfo.classList.add('hidden');
      authStatus.innerHTML = '<span class="text-gray-600">Como invitado</span>';
    }

    if (loginBtn) {
      loginBtn.addEventListener('click', () => {
        requireAuth('continuar con el checkout');
      });
    }
  }

  function initializeCartSummary() {
    const cart = cartStore.get();
    const container = document.getElementById('checkout-cart-items');
    
    container.innerHTML = cart.items.map(item => `
      <div class="flex items-center space-x-4 p-4 border border-gray-200 rounded-md">
        <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-md">
        <div class="flex-1">
          <h3 class="font-medium text-gray-900">${item.name}</h3>
          <p class="text-sm text-gray-600">Cantidad: ${item.quantity}</p>
          ${item.selectedVariant ? `
            <p class="text-xs text-gray-500">
              ${item.selectedVariant.color ? `Color: ${item.selectedVariant.color}` : ''}
              ${item.selectedVariant.size ? ` • Talla: ${item.selectedVariant.size}` : ''}
            </p>
          ` : ''}
        </div>
        <div class="text-right">
          <p class="font-medium text-gray-900">$${(item.price * item.quantity).toLocaleString('es-CO')}</p>
          ${item.originalPrice && item.originalPrice > item.price ? `
            <p class="text-sm text-gray-500 line-through">$${(item.originalPrice * item.quantity).toLocaleString('es-CO')}</p>
          ` : ''}
        </div>
      </div>
    `).join('');
  }

  function updateOrderSummary(summary) {
    document.getElementById('subtotal').textContent = `$${summary.subtotal.toLocaleString('es-CO')}`;
    document.getElementById('shipping').textContent = summary.shippingCost === 0 ? 'Gratis' : `$${summary.shippingCost.toLocaleString('es-CO')}`;
    document.getElementById('tax').textContent = `$${summary.estimatedTax.toLocaleString('es-CO')}`;
    document.getElementById('total').textContent = `$${summary.total.toLocaleString('es-CO')}`;

    // Mostrar/ocultar descuento
    const discountRow = document.getElementById('discount-row');
    if (summary.savings > 0) {
      discountRow.style.display = 'flex';
      document.getElementById('discount').textContent = `-$${summary.savings.toLocaleString('es-CO')}`;
    } else {
      discountRow.style.display = 'none';
    }

    // Progress de envío gratis
    const freeShippingProgress = document.getElementById('free-shipping-progress');
    if (summary.freeShippingRemaining > 0) {
      freeShippingProgress.classList.remove('hidden');
      document.getElementById('free-shipping-remaining').textContent = `$${summary.freeShippingRemaining.toLocaleString('es-CO')} restantes`;
      const progress = ((summary.freeShippingThreshold - summary.freeShippingRemaining) / summary.freeShippingThreshold) * 100;
      document.getElementById('free-shipping-bar').style.width = `${Math.min(progress, 100)}%`;
    } else {
      freeShippingProgress.classList.add('hidden');
    }

    // Habilitar/deshabilitar botón de pedido
    updatePlaceOrderButton();
  }

  function initializeShippingMethods() {
    const container = document.getElementById('shipping-methods');
    const summary = cartSummary.get();
    
    const methods = [
      {
        id: 'standard',
        name: 'Envío estándar',
        description: '3-5 días hábiles',
        price: summary.shippingCost,
        selected: true
      },
      {
        id: 'express',
        name: 'Envío express',
        description: '1-2 días hábiles',
        price: summary.shippingCost + 10000,
        selected: false
      }
    ];

    container.innerHTML = methods.map(method => `
      <label class="cursor-pointer">
        <input type="radio" name="shipping-method" value="${method.id}" class="sr-only" ${method.selected ? 'checked' : ''}>
        <div class="border-2 ${method.selected ? 'border-primary-500 bg-primary-50' : 'border-gray-200'} rounded-lg p-4">
          <div class="flex justify-between items-center">
            <div>
              <p class="font-medium text-gray-900">${method.name}</p>
              <p class="text-sm text-gray-600">${method.description}</p>
            </div>
            <p class="font-medium text-gray-900">
              ${method.price === 0 ? 'Gratis' : `$${method.price.toLocaleString('es-CO')}`}
            </p>
          </div>
        </div>
      </label>
    `).join('');

    // Manejar selección de método de envío
    container.addEventListener('change', function(e) {
      if (e.target.name === 'shipping-method') {
        const labels = container.querySelectorAll('label > div');
        labels.forEach(label => {
          label.className = 'border-2 border-gray-200 rounded-lg p-4';
        });
        e.target.parentElement.querySelector('div').className = 'border-2 border-primary-500 bg-primary-50 rounded-lg p-4';
      }
    });
  }

  function initializePaymentMethods() {
    const paymentInputs = document.querySelectorAll('input[name="payment-method"]');
    
    paymentInputs.forEach(input => {
      input.addEventListener('change', function() {
        // Reset all payment method styles
        paymentInputs.forEach(inp => {
          const container = inp.parentElement.querySelector('div');
          container.className = 'border-2 border-gray-200 rounded-lg p-4 hover:border-gray-300';
        });
        
        // Highlight selected method
        const container = this.parentElement.querySelector('div');
        container.className = 'border-2 border-primary-500 rounded-lg p-4 bg-primary-50';
        
        updatePlaceOrderButton();
      });
    });
  }

  function initializeFormValidation() {
    const form = document.getElementById('shipping-form');
    const inputs = form.querySelectorAll('input[required], select[required]');
    
    inputs.forEach(input => {
      input.addEventListener('blur', validateField);
      input.addEventListener('input', validateField);
    });

    // Validar email de invitado
    const guestEmail = document.getElementById('guest-email');
    if (guestEmail) {
      guestEmail.addEventListener('blur', validateField);
      guestEmail.addEventListener('input', validateField);
    }

    function validateField(e) {
      const field = e.target;
      const value = field.value.trim();
      
      // Remover clases de error previas
      field.classList.remove('border-red-500', 'border-green-500');
      
      if (field.required && !value) {
        field.classList.add('border-red-500');
        return false;
      }
      
      if (field.type === 'email' && value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(value)) {
          field.classList.add('border-red-500');
          return false;
        }
      }
      
      field.classList.add('border-green-500');
      updatePlaceOrderButton();
      return true;
    }
  }

  function updatePlaceOrderButton() {
    const placeOrderBtn = document.getElementById('place-order-btn');
    const form = document.getElementById('shipping-form');
    const requiredFields = form.querySelectorAll('input[required], select[required]');
    const paymentMethod = document.querySelector('input[name="payment-method"]:checked');
    const user = userStore.get();
    
    let allValid = true;
    
    // Verificar campos requeridos
    requiredFields.forEach(field => {
      if (!field.value.trim()) {
        allValid = false;
      }
    });
    
    // Verificar email de invitado si no está logueado
    if (!user.isAuthenticated) {
      const guestEmail = document.getElementById('guest-email');
      if (!guestEmail.value.trim() || !guestEmail.value.includes('@')) {
        allValid = false;
      }
    }
    
    // Verificar método de pago
    if (!paymentMethod) {
      allValid = false;
    }
    
    placeOrderBtn.disabled = !allValid;
    
    if (allValid) {
      placeOrderBtn.textContent = 'Finalizar pedido';
    } else {
      placeOrderBtn.textContent = 'Completa la información requerida';
    }
  }

  function fillAddressForm(address) {
    document.getElementById('firstName').value = address.firstName || '';
    document.getElementById('lastName').value = address.lastName || '';
    document.getElementById('streetAddress').value = address.streetAddress || '';
    document.getElementById('apartment').value = address.apartment || '';
    document.getElementById('city').value = address.city || '';
    document.getElementById('state').value = address.state || '';
    document.getElementById('postalCode').value = address.postalCode || '';
    document.getElementById('phone').value = address.phone || '';
  }

  // Manejar cupón de descuento
  document.getElementById('apply-promo').addEventListener('click', function() {
    const promoCode = document.getElementById('promo-code').value.trim();
    const promoMessage = document.getElementById('promo-message');
    
    if (!promoCode) {
      promoMessage.className = 'mt-2 text-sm text-red-600';
      promoMessage.textContent = 'Ingresa un código de descuento';
      promoMessage.classList.remove('hidden');
      return;
    }
    
    // Aplicar cupón usando el store del carrito
    import('../../stores/cartStore.js').then(({ applyCoupon }) => {
      applyCoupon(promoCode).then(result => {
        if (result.success) {
          promoMessage.className = 'mt-2 text-sm text-green-600';
          promoMessage.textContent = result.message;
        } else {
          promoMessage.className = 'mt-2 text-sm text-red-600';
          promoMessage.textContent = result.message;
        }
        promoMessage.classList.remove('hidden');
      });
    });
  });

  // Finalizar pedido
  document.getElementById('place-order-btn').addEventListener('click', async function() {
    if (this.disabled) return;
    
    this.disabled = true;
    this.innerHTML = '<span class="animate-spin inline-block w-4 h-4 border-2 border-current border-t-transparent rounded-full mr-2"></span>Procesando...';
    
    try {
      await processOrder();
    } catch (error) {
      console.error('Error procesando pedido:', error);
      showError('Error al procesar el pedido. Inténtalo de nuevo.');
      this.disabled = false;
      this.textContent = 'Finalizar pedido';
    }
  });

  async function processOrder() {
    const user = userStore.get();
    const cart = exportCartForCheckout();
    
    // Recopilar datos del formulario
    const shippingData = {
      firstName: document.getElementById('firstName').value,
      lastName: document.getElementById('lastName').value,
      streetAddress: document.getElementById('streetAddress').value,
      apartment: document.getElementById('apartment').value,
      city: document.getElementById('city').value,
      state: document.getElementById('state').value,
      postalCode: document.getElementById('postalCode').value,
      country: 'CO',
      phone: document.getElementById('phone').value
    };
    
    const paymentMethod = document.querySelector('input[name="payment-method"]:checked').value;
    const customerEmail = user.isAuthenticated ? user.profile.email : document.getElementById('guest-email').value;
    const orderNotes = document.getElementById('order-notes').value;
    
    const checkoutData = {
      cart,
      shippingAddress: shippingData,
      billingAddress: shippingData, // Por ahora usar la misma dirección
      paymentMethod,
      notes: orderNotes
    };
    
    // Procesar checkout
    let orderId;
    if (user.isAuthenticated) {
      const result = await processHybridCheckout(user.user.uid, checkoutData);
      if (!result.success) {
        throw new Error(result.error);
      }
      orderId = result.orderId;
    } else {
      // Checkout como invitado - crear orden temporal
      orderId = `guest_${Date.now()}`;
    }
    
    // Crear payment link con Wompi
    const paymentData = {
      orderId,
      amount: cart.summary.total,
      customerEmail,
      description: `Pedido ${orderId} - Kamasex.shop`,
      shippingAddress: shippingData
    };
    
    const paymentResult = await createPaymentLink(paymentData);
    
    if (paymentResult.success && paymentResult.redirectUrl) {
      // Redirigir a Wompi para el pago
      window.location.href = paymentResult.redirectUrl;
    } else {
      throw new Error('Error creando enlace de pago');
    }
  }

  function updateUserSection(user) {
    // Actualizar sección de usuario cuando cambie el estado
    initializeUserSection();
  }

  function showError(message) {
    // Mostrar notificación de error
    const toast = document.createElement('div');
    toast.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-md z-50 transform transition-transform duration-300 translate-x-full';
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.classList.remove('translate-x-full');
    }, 100);
    
    setTimeout(() => {
      toast.classList.add('translate-x-full');
      setTimeout(() => toast.remove(), 300);
    }, 3000);
  }
</script>

<style>
  .btn-primary {
    @apply bg-primary-500 hover:bg-primary-600 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200;
  }
</style>